{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/IME/English.ts","webpack:///./src/IME/Korean.ts","webpack:///./src/IME/index.ts","webpack:///./src/components/GhostKeyboard.ts","webpack:///./src/helpers/utils.ts","webpack:///./src/index.ts","webpack:///./src/keyboards/English.ts","webpack:///./src/keyboards/Korean.ts","webpack:///./src/keyboards/Main.ts","webpack:///./src/keyboards/codes.ts","webpack:///./src/keyboards/index.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACe,8EAAe,EAAC;;;;;;;;;;;;;ACb/B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACc,6EAAc,EAAC;;;;;;;;;;;;;AC9G9B;AAAA;AAAA;AAA2B;AACD;AAC1B;AACA,QAAQ,gDAAE;AACV,QAAQ,+CAAE;AACV;AACe,uEAAQ,EAAC;;;;;;;;;;;;;ACNxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAgB,SAAI,IAAI,SAAI;AAC5B;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACqC;AACsB;AAClC;AACY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,aAAa,kDAAS;AACtB;AACA;AACA;AACA;AACA,4BAA4B,kDAAS;AACrC,uBAAuB,4CAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,eAAe,wDAAK,gBAAgB,8DAA8D;AAClG,eAAe,wDAAK,iBAAiB,4CAA4C;AACjF,eAAe,wDAAK,qBAAqB,gDAAgD;AACzF,eAAe,wDAAK,kBAAkB,6CAA6C;AACnF,eAAe,wDAAK,oBAAoB,+CAA+C;AACvF,eAAe,wDAAK,mBAAmB,gDAAgD;AACvF,eAAe,wDAAK,sBAAsB,gDAAgD;AAC1F,eAAe,wDAAK,qBAAqB,gDAAgD;AACzF,eAAe,wDAAK,qBAAqB,gDAAgD;AACzF,eAAe,wDAAK,gBAAgB,gDAAgD;AACpF,eAAe,wDAAK,eAAe,gDAAgD;AACnF,eAAe,wDAAK,gBAAgB,oDAAoD;AACxF,eAAe,wDAAK,gBAAgB,qDAAqD;AACzF;AACA,0CAA0C;AAC1C,eAAe,wDAAK,4BAA4B,wDAAK;AACrD,eAAe,wDAAK,4BAA4B,wDAAK;AACrqBAAqB,wDAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wDAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wDAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wDAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wDAAK;AAC/B;AACA;AACA;AACA;AACA;AACA,0BAA0B,wDAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sDAAK;AAC9B;AACA;AACA;AACA;AACA;AACA,uFAAuF,aAAa;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sDAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8BAA8B;AACzD;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,uCAAuC,EAAE;AACpG;AACA,4BAA4B,kDAAS;AACrC,uBAAuB,4CAAG;AAC1B,gEAAgE,qDAAqD,EAAE;AACvH;AACA,8BAA8B,wDAAK;AACnC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO;AAC1B;AACA;AACA;AACA,CAAC;AACc,4EAAa,EAAC;;;;;;;;;;;;;AC5d7B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,0BAA0B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,oEAAK,EAAC;;;;;;;;;;;;;ACxErB;AAAA;AAAA;AAAmD;AACnD;AACA,eAAe,iEAAS;AACxB;AACyB;AACV,4EAAa,EAAC;;;;;;;;;;;;;ACL7B;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA;AACA,cAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,6BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AAC2B;AACM;AAClC;AACA,KAAK,OAAO,8CAAK,sCAAsC;AACvD,KAAK,OAA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","file":"ghost-keyboard.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","var EnglishComposer = /** @class */ (function () {\n    function EnglishComposer() {\n        this.lang = 'en';\n    }\n    EnglishComposer.prototype.compose = function (text) {\n        return text;\n    };\n    EnglishComposer.prototype.decompose = function (text) {\n        return text;\n    };\n    return EnglishComposer;\n}());\n;\nexport default EnglishComposer;\n","var UNICODE_DATA = {\n    initial: [12593, 12594, 12596, 12599, 12600, 12601, 12609, 12610, 12611, 12613, 12614, 12615, 12616, 12617, 12618, 12619, 12620, 12621, 12622],\n    finale: [0, 12593, 12594, 12595, 12596, 12597, 12598, 12599, 12601, 12602, 12603, 12604, 12605, 12606, 12607, 12608, 12609, 12610, 12612, 12613, 12614, 12615, 12616, 12618, 12619, 12620, 12621, 12622],\n    dMedial: [0, 0, 0, 0, 0, 0, 0, 0, 0, 800, 801, 820, 0, 0, 1304, 1305, 1320, 0, 0, 1820],\n    dFinale: [0, 0, 0, 119, 0, 422, 427, 0, 0, 801, 816, 817, 819, 825, 826, 827, 0, 0, 1719, 0, 0],\n    SBase: 44032,\n    VBase: 12623,\n    LCount: 19,\n    VCount: 21,\n    TCount: 28,\n    NCount: 588,\n    SCount: 11172\n    //LBase: 4352\n    //TBase: 4519\n};\nvar KoreanComposer = /** @class */ (function () {\n    function KoreanComposer() {\n        this.lang = 'ko';\n    }\n    KoreanComposer.prototype.compose = function (text) {\n        var textLen = text.length;\n        if (textLen === 0) {\n            return \"\";\n        }\n        var initial = UNICODE_DATA.initial, finale = UNICODE_DATA.finale, VBase = UNICODE_DATA.VBase, SBase = UNICODE_DATA.SBase, VCount = UNICODE_DATA.VCount, TCount = UNICODE_DATA.TCount, NCount = UNICODE_DATA.NCount, LCount = UNICODE_DATA.LCount, dFinale = UNICODE_DATA.dFinale, dMedial = UNICODE_DATA.dMedial;\n        var firstUnicode = text.charCodeAt(0), firstChar = String.fromCharCode(firstUnicode), curUnicode, initialIndex, mergeUnicode, medialIndex, finaleIndex, dFinaleIndex, SBaseUnicode;\n        for (var i = 1; i < textLen; ++i) {\n            curUnicode = text.charCodeAt(i);\n            initialIndex = initial.indexOf(firstUnicode);\n            if (initialIndex !== -1) {\n                mergeUnicode = curUnicode - VBase;\n                if (0 <= mergeUnicode && mergeUnicode < VCount) {\n                    firstUnicode = SBase + (initialIndex * VCount + mergeUnicode) * TCount;\n                    firstChar = firstChar.slice(0, firstChar.length - 1) + String.fromCharCode(firstUnicode);\n                    continue;\n                }\n            }\n            SBaseUnicode = firstUnicode - SBase;\n            if (0 <= SBaseUnicode && SBaseUnicode < 11145 && (SBaseUnicode % TCount) === 0) {\n                finaleIndex = finale.indexOf(curUnicode);\n                if (finaleIndex !== -1) {\n                    firstUnicode += finaleIndex;\n                    firstChar = firstChar.slice(0, firstChar.length - 1) + String.fromCharCode(firstUnicode);\n                    continue;\n                }\n                mergeUnicode = (SBaseUnicode % NCount) / TCount;\n                medialIndex = dMedial.indexOf((mergeUnicode * 100) + (curUnicode - VBase));\n                if (medialIndex > 0) {\n                    firstUnicode += (medialIndex - mergeUnicode) * TCount;\n                    firstChar = firstChar.slice(0, firstChar.length - 1) + String.fromCharCode(firstUnicode);\n                    continue;\n                }\n            }\n            if (0 <= SBaseUnicode && SBaseUnicode < 11172 && (SBaseUnicode % TCount) !== 0) {\n                finaleIndex = SBaseUnicode % TCount;\n                mergeUnicode = curUnicode - VBase;\n                if (0 <= mergeUnicode && mergeUnicode < VCount) {\n                    initialIndex = initial.indexOf(finale[finaleIndex]);\n                    if (0 <= initialIndex && initialIndex < LCount) {\n                        firstChar = firstChar.slice(0, firstChar.length - 1) + String.fromCharCode(firstUnicode - finaleIndex);\n                        firstUnicode = SBase + (initialIndex * VCount + mergeUnicode) * TCount;\n                        firstChar = firstChar + String.fromCharCode(firstUnicode);\n                        continue;\n                    }\n                    if (finaleIndex < dFinale.length && dFinale[finaleIndex] !== 0) {\n                        firstChar = firstChar.slice(0, firstChar.length - 1) + String.fromCharCode(firstUnicode - finaleIndex + Math.floor(dFinale[finaleIndex] / 100));\n                        firstUnicode = SBase + (initial.indexOf(finale[(dFinale[finaleIndex] % 100)]) * VCount + mergeUnicode) * TCount;\n                        firstChar = firstChar + String.fromCharCode(firstUnicode);\n                        continue;\n                    }\n                }\n                dFinaleIndex = dFinale.indexOf((finaleIndex * 100) + finale.indexOf(curUnicode));\n                if (dFinaleIndex > 0) {\n                    firstUnicode = firstUnicode + dFinaleIndex - finaleIndex;\n                    firstChar = firstChar.slice(0, firstChar.length - 1) + String.fromCharCode(firstUnicode);\n                    continue;\n                }\n            }\n            firstUnicode = curUnicode;\n            firstChar = firstChar + String.fromCharCode(curUnicode);\n        }\n        return firstChar;\n    };\n    /**\n     * Decompose a korean char\n     * @param {String} text\n     * @returns {string}\n     */\n    KoreanComposer.prototype.decompose = function (text) {\n        var initial = UNICODE_DATA.initial, finale = UNICODE_DATA.finale, VBase = UNICODE_DATA.VBase, SBase = UNICODE_DATA.SBase, TCount = UNICODE_DATA.TCount, NCount = UNICODE_DATA.NCount, SCount = UNICODE_DATA.SCount;\n        var len = text.length, firstChar = \"\", curUnicode, SBaseUnicode, initialUnicode, VBaseUnicode, finaleUnicode;\n        for (var b = 0; b < len; b++) {\n            curUnicode = text.charCodeAt(b);\n            SBaseUnicode = curUnicode - SBase;\n            if (SBaseUnicode < 0 || SBaseUnicode >= SCount) {\n                firstChar = firstChar + String.fromCharCode(curUnicode);\n                continue;\n            }\n            initialUnicode = initial[Math.floor(SBaseUnicode / NCount)];\n            VBaseUnicode = VBase + (SBaseUnicode % NCount) / TCount;\n            finaleUnicode = finale[SBaseUnicode % TCount];\n            firstChar = firstChar + String.fromCharCode(initialUnicode, VBaseUnicode);\n            if (finaleUnicode !== 0) {\n                firstChar = firstChar + String.fromCharCode(finaleUnicode);\n            }\n        }\n        return firstChar;\n    };\n    return KoreanComposer;\n}());\nexport default KoreanComposer;\n","import en from './English';\nimport ko from './Korean';\nvar IME_LIST = {\n    en: en,\n    ko: ko\n};\nexport default IME_LIST;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport Keyboards from '../keyboards';\nimport codes, { get as getCode } from '../keyboards/codes';\nimport IME from '../IME';\nimport utils from '../helpers/utils';\nvar defaultConfig = {\n    lang: 'en',\n    value: '',\n    caretPos: {\n        startPos: 0,\n        endPos: 0,\n        direction: null\n    }\n};\nvar GhostKeyboard = /** @class */ (function () {\n    function GhostKeyboard(config) {\n        var _a, _b;\n        if (config) {\n            config = __assign({}, defaultConfig, config);\n        }\n        if (!Keyboards[config.lang]) {\n            throw new Error('Keyboard language not compatible.');\n        }\n        this.lang = config.lang;\n        this.pattern = config.pattern;\n        this.Keyboard = new Keyboards[this.lang];\n        this.IME = new IME[this.lang];\n        this.setInput(config.input);\n        this.value = config.value;\n        this.caretPos = {\n            startPos: config.caretPos.startPos,\n            endPos: config.caretPos.endPos,\n            direction: null\n        };\n        this.composing = null;\n        this.capslock = false;\n        this.commands = (_a = {},\n            _a[codes.KeyA.code] = [{ mods: ['ctrlKey'], action: this.selectWholeValue.bind(this) }],\n            _a[codes.Space.code] = [{ mods: [], action: this.onSpace.bind(this) }],\n            _a[codes.Backspace.code] = [{ mods: [], action: this.onBackspace.bind(this) }],\n            _a[codes.Delete.code] = [{ mods: [], action: this.onDelete.bind(this) }],\n            _a[codes.CapsLock.code] = [{ mods: [], action: this.onCapsLock.bind(this) }],\n            _a[codes.ArrowUp.code] = [{ mods: [], action: this.onMoveCaret.bind(this) }],\n            _a[codes.ArrowRight.code] = [{ mods: [], action: this.onMoveCaret.bind(this) }],\n            _a[codes.ArrowDown.code] = [{ mods: [], action: this.onMoveCaret.bind(this) }],\n            _a[codes.ArrowLeft.code] = [{ mods: [], action: this.onMoveCaret.bind(this) }],\n            _a[codes.Home.code] = [{ mods: [], action: this.onMoveCaret.bind(this) }],\n            _a[codes.End.code] = [{ mods: [], action: this.onMoveCaret.bind(this) }],\n            _a[codes.KeyC.code] = [{ mods: ['ctrlKey'], action: this.onCopy.bind(this) }],\n            _a[codes.KeyV.code] = [{ mods: ['ctrlKey'], action: this.onPaste.bind(this) }],\n            _a);\n        this.notPreventCommands = (_b = {},\n            _b[codes.KeyC.code] = this.commands[codes.KeyC.code],\n            _b[codes.KeyV.code] = this.commands[codes.KeyV.code],\n            _b);\n    }\n    GhostKeyboard.prototype.selectWholeValue = function () {\n        this.setCaretPos(0, this.value.length);\n    };\n    GhostKeyboard.prototype.getCaretPos = function () {\n        return {\n            startPos: this.caretPos.startPos,\n            endPos: this.caretPos.endPos,\n            direction: this.caretPos.direction\n        };\n    };\n    GhostKeyboard.prototype.setCaretPos = function (startPos, endPos, direction) {\n        var len = this.value.length;\n        if (startPos < 0) {\n            startPos = 0;\n        }\n        if (startPos > len) {\n            startPos = len;\n        }\n        if (endPos === undefined) {\n            endPos = startPos;\n        }\n        if (endPos < 0) {\n            endPos = 0;\n        }\n        if (startPos > endPos) {\n            startPos = endPos;\n        }\n        if (endPos < 0) {\n            endPos = startPos;\n        }\n        if (endPos > len) {\n            endPos = len;\n        }\n        this.caretPos.direction = direction && (startPos !== endPos) ? direction : null;\n        this.caretPos.startPos = startPos;\n        this.caretPos.endPos = endPos;\n    };\n    GhostKeyboard.prototype.insertChar = function (char) {\n        var value = this.value, len = value.length;\n        if (this.pattern) {\n            var matchedChars = char.match(this.pattern);\n            if (!matchedChars) {\n                return;\n            }\n            char = matchedChars.join('');\n        }\n        this.value = value.substring(0, this.caretPos.startPos) + char + value.substring(this.caretPos.endPos, len);\n        this.setCaretPos(this.caretPos.startPos + char.length);\n        this.updateInput();\n    };\n    GhostKeyboard.prototype.removeComposing = function () {\n        if (!this.composing) {\n            return '';\n        }\n        this.setCaretPos(this.composing.position, this.composing.position + this.composing.char.length);\n        this.composing = null;\n        return this.removeSelection();\n    };\n    GhostKeyboard.prototype.isMultipleSelection = function () {\n        var _a = this.getCaretPos(), startPos = _a.startPos, endPos = _a.endPos;\n        return (startPos !== endPos);\n    };\n    GhostKeyboard.prototype.onSpace = function () {\n        if (this.isMultipleSelection()) {\n            this.removeSelection();\n            return;\n        }\n        this.composing = null;\n        this.insertChar(' ');\n    };\n    GhostKeyboard.prototype.onDelete = function () {\n        if (this.isMultipleSelection()) {\n            this.removeSelection();\n            return;\n        }\n        var startPos = this.getCaretPos().startPos;\n        this.composing = null;\n        this.setCaretPos(startPos, startPos + 1);\n        this.removeSelection();\n    };\n    GhostKeyboard.prototype.onBackspace = function () {\n        if (this.isMultipleSelection()) {\n            this.removeSelection();\n            return;\n        }\n        var startPos = this.getCaretPos().startPos;\n        if (this.composing) {\n            var composingChar = this.removeComposing();\n            var decomposeChar = this.IME.decompose(composingChar);\n            if (decomposeChar.length === 1) {\n                return;\n            }\n            var newCompositionChar = this.IME.compose(decomposeChar.slice(0, -1));\n            this.composing = this.createComposition(newCompositionChar, this.caretPos.startPos + (newCompositionChar.length - 1));\n            this.insertChar(this.composing.char);\n            return;\n        }\n        this.setCaretPos(startPos - 1, startPos);\n        this.removeSelection();\n    };\n    GhostKeyboard.prototype.onMoveCaret = function (code, mods) {\n        var _a = this.getCaretPos(), startPos = _a.startPos, endPos = _a.endPos, direction = _a.direction;\n        this.composing = null;\n        if (code === codes.ArrowRight.code) {\n            if (mods.ctrlKey) {\n                var refPos = direction === 'left' ? startPos : endPos;\n                var valueCut = this.value.substr(refPos, this.value.length);\n                var words = valueCut.match(/[^ .!@#]+/gi);\n                if (words) {\n                    refPos = this.value.indexOf(words[0], refPos) + words[0].length;\n                    startPos = direction === 'left' ? refPos : startPos;\n                    endPos = direction === 'left' ? endPos : refPos;\n                    direction = direction ? direction : 'right';\n                }\n                return this.setCaretPos((mods.shiftKey ? startPos : endPos), endPos, direction);\n            }\n            if (startPos !== endPos && !mods.shiftKey) {\n                return this.setCaretPos(endPos);\n            }\n            if (mods.shiftKey) {\n                startPos = direction === 'left' ? startPos + 1 : startPos;\n                endPos = direction === 'left' ? endPos : endPos + 1;\n                direction = direction ? direction : 'right';\n            }\n            else {\n                endPos += 1;\n                startPos = endPos;\n                direction = null;\n            }\n            return this.setCaretPos(startPos, endPos, direction);\n        }\n        else if (code === codes.ArrowLeft.code) {\n            if (mods.ctrlKey) {\n                var refPos = direction === 'right' ? endPos : startPos;\n                var valueCut = this.value.substr(0, refPos);\n                var words = valueCut.match(/[^ .!@#]+/gi);\n                if (words) {\n                    refPos = valueCut.lastIndexOf(words[words.length - 1]);\n                    startPos = direction === 'right' ? startPos : refPos;\n                    endPos = direction === 'right' ? refPos : endPos;\n                    direction = direction ? direction : 'left';\n                }\n                return this.setCaretPos(startPos, (mods.shiftKey ? endPos : startPos), direction);\n            }\n            if (startPos !== endPos && !mods.shiftKey) {\n                return this.setCaretPos(startPos);\n            }\n            if (mods.shiftKey) {\n                startPos = direction === 'right' ? startPos : startPos - 1;\n                endPos = direction === 'right' ? endPos - 1 : endPos;\n                direction = direction ? direction : 'left';\n            }\n            else {\n                startPos -= 1;\n                endPos = startPos;\n                direction = null;\n            }\n            return this.setCaretPos(startPos, endPos, direction);\n        }\n        else if (code === codes.ArrowUp.code) {\n            //TODO Textarea proper selection\n            if (mods.shiftKey) {\n                return this.setCaretPos(0, endPos);\n            }\n            return this.setCaretPos(0);\n        }\n        else if (code === codes.ArrowDown.code) {\n            //TODO Textarea proper selection\n            if (mods.shiftKey) {\n                return this.setCaretPos(startPos, this.value.length);\n            }\n            return this.setCaretPos(this.value.length);\n        }\n        else if (code === codes.Home.code) {\n            if (mods.shiftKey) {\n                return this.setCaretPos(0, endPos);\n            }\n            return this.setCaretPos(0);\n        }\n        else if (code === codes.End.code) {\n            if (mods.shiftKey) {\n                return this.setCaretPos(startPos, this.value.length);\n            }\n            return this.setCaretPos(this.value.length);\n        }\n    };\n    GhostKeyboard.prototype.onInputInput = function (e) {\n        var _a = this.input, selectionStart = _a.selectionStart, selectionEnd = _a.selectionEnd, value = _a.value;\n        this.input.value = value.substr(0, selectionStart) + value.substr(selectionEnd, value.length);\n        this.input.selectionStart = selectionStart;\n        this.input.selectionEnd = selectionStart;\n    };\n    GhostKeyboard.prototype.onCompositionstart = function (e) {\n        /*\n        * Blur is a hack to force the browser\n        * to cancel the composition\n        */\n        this.input.blur();\n        requestAnimationFrame(this.updateInput.bind(this));\n    };\n    GhostKeyboard.prototype.onCompositionend = function (e) {\n        this.composing = null;\n    };\n    GhostKeyboard.prototype.updateCaretPosFromInput = function () {\n        var _a = this.getCaretPos(), startPos = _a.startPos, endPos = _a.endPos;\n        var self = this;\n        /**\n         * Safari doesn`t update the position instantly\n         */\n        requestAnimationFrame(function () {\n            var _a = self.input, selectionStart = _a.selectionStart, selectionEnd = _a.selectionEnd;\n            if (startPos !== selectionStart || endPos !== selectionEnd) {\n                self.setCaretPos(selectionStart, selectionEnd);\n                self.composing = null;\n            }\n        });\n    };\n    GhostKeyboard.prototype.onCopy = function () {\n        var _a = this.getCaretPos(), startPos = _a.startPos, endPos = _a.endPos;\n        this.clipboard = this.value.substr(startPos, endPos);\n    };\n    GhostKeyboard.prototype.onPaste = function (e) {\n        var pastedText = this.clipboard;\n        if (e && e instanceof ClipboardEvent) {\n            e.preventDefault();\n            pastedText = utils.getClipboardText(e);\n        }\n        this.insertChar(pastedText);\n    };\n    GhostKeyboard.prototype.onInputMousedown = function () {\n        this.composing = null;\n        document.addEventListener('mouseup', this.updateCaretPosFromInput.bind(this), { once: true });\n    };\n    GhostKeyboard.prototype.setInput = function (input) {\n        if (!input) {\n            return;\n        }\n        if (typeof input !== 'object' || !(input instanceof HTMLInputElement)) {\n            throw new Error('HTMLInputElement is required');\n        }\n        // @ts-ignore\n        if (input.GhostKeyboard !== undefined) {\n            throw new Error('HTMLInputElement has already Ghost keyboard attached.');\n        }\n        // @ts-ignore\n        input.GhostKeyboard = true;\n        this.input = input;\n        this.input.setAttribute('autocomplete', 'off');\n        this.input.addEventListener('keydown', this.event.bind(this));\n        this.input.addEventListener('paste', this.onPaste.bind(this));\n        if (utils.getBrowser() === 'Safari') {\n            this.input.addEventListener('beforeinput', this.onInputInput.bind(this));\n        }\n        else {\n            this.input.addEventListener('compositionupdate', this.onCompositionstart.bind(this));\n            this.input.addEventListener('compositionend', this.onCompositionend.bind(this));\n        }\n        this.input.addEventListener('mousedown', this.onInputMousedown.bind(this));\n    };\n    GhostKeyboard.prototype.updateInput = function () {\n        if (!this.input) {\n            return;\n        }\n        this.input.value = this.value;\n        this.input.focus();\n        this.input.selectionStart = this.caretPos.startPos;\n        this.input.selectionEnd = this.caretPos.endPos;\n        var coords = utils.getCaretCoord(this.input, this.caretPos.startPos);\n        var inputViewStart = this.input.scrollLeft;\n        var inputViewEnd = this.input.scrollLeft + this.input.clientWidth;\n        if (coords.x < inputViewStart || coords.x > inputViewEnd) {\n            this.input.scrollLeft = coords.x - (this.input.clientWidth / 2);\n        }\n    };\n    GhostKeyboard.prototype.removeSelection = function () {\n        var _a = this.getCaretPos(), startPos = _a.startPos, endPos = _a.endPos;\n        var value = this.value;\n        var removedChars = value.slice(startPos, endPos);\n        this.value = value.slice(0, startPos) + value.slice(endPos);\n        this.setCaretPos(startPos);\n        this.composing = null;\n        return removedChars;\n    };\n    GhostKeyboard.prototype.normalizeMods = function (mods) {\n        var modsKey = ['ctrlKey', 'altKey', 'shiftKey', 'metaKey'];\n        var normalizedMods = {};\n        modsKey.forEach(function (key) {\n            normalizedMods[key] = false;\n            if (mods && mods[key]) {\n                normalizedMods[key] = mods[key];\n            }\n        });\n        if (mods && mods.metaKey) {\n            normalizedMods.ctrlKey = true;\n        }\n        normalizedMods.capslock = this.capslock;\n        return normalizedMods;\n    };\n    GhostKeyboard.prototype.createComposition = function (char, position) {\n        return {\n            char: char,\n            position: position\n        };\n    };\n    GhostKeyboard.prototype.onCapsLock = function () {\n        this.capslock = !this.capslock;\n    };\n    GhostKeyboard.prototype.getCommandAction = function (commands, code, mods) {\n        var commandFound = null;\n        if (commands[code]) {\n            var commandConditions = commands[code];\n            for (var i = 0; i < commandConditions.length; i++) {\n                var missingMods = commandConditions[i].mods.filter(function (mod) {\n                    return mods[mod] !== true;\n                });\n                if (missingMods.length !== 0) {\n                    continue;\n                }\n                commandFound = commandConditions[i].action;\n                break;\n            }\n        }\n        return commandFound;\n    };\n    GhostKeyboard.prototype.filterPattern = function () {\n        if (!this.pattern) {\n            return;\n        }\n        var _a = this.getCaretPos(), startPos = _a.startPos, endPos = _a.endPos;\n        var oppositePattern = new RegExp('[^' + this.pattern.source + ']', 'g');\n        var beginValue = this.value.substr(0, startPos);\n        var beginCleanValue = beginValue.replace(oppositePattern, '');\n        this.value = this.value.replace(oppositePattern, '');\n        if (beginValue.length !== beginCleanValue.length) {\n            this.setCaretPos(startPos - (beginValue.length - beginCleanValue.length));\n        }\n    };\n    GhostKeyboard.prototype.executeKey = function (code, mods) {\n        mods = this.normalizeMods(mods);\n        // First verify if has any command related to the key\n        var commandAction = this.getCommandAction(this.commands, code, mods);\n        if (commandAction) {\n            commandAction(code, mods);\n            this.updateInput();\n            return this.value;\n        }\n        // If no command found, insert the character based on the virtual keyboard\n        var charSet = this.Keyboard.getChar(code, mods);\n        if (!charSet || !charSet.char) {\n            return this.value;\n        }\n        var char = charSet.char;\n        if (this.composing && charSet.compose) {\n            var composingChar = this.removeComposing();\n            var composition = this.IME.compose(composingChar + char);\n            char = composition;\n        }\n        this.composing = charSet.compose ? this.createComposition(char.charAt(char.length - 1), this.caretPos.startPos + (char.length - 1)) : null;\n        this.insertChar(char);\n        return this.value;\n    };\n    GhostKeyboard.prototype.setValue = function (value) {\n        this.value = value;\n        this.setCaretPos(0);\n    };\n    GhostKeyboard.prototype.changeLang = function (lang) {\n        var _this = this;\n        var value = this.value;\n        var letters = this.IME.decompose(value).split('');\n        var keyboardCodes = letters.map(function (letter) { return _this.Keyboard.getCode(letter); });\n        this.lang = lang;\n        this.Keyboard = new Keyboards[lang];\n        this.IME = new IME[lang];\n        var convertedChars = keyboardCodes.map(function (code) { return _this.Keyboard.getChar(code.code, code.mods); });\n        var convertedLetters = convertedChars.map(function (char) {\n            if (char.code === codes.Space.code) {\n                return ' ';\n            }\n            return char.char;\n        });\n        this.value = this.IME.compose(convertedLetters.join(''));\n    };\n    GhostKeyboard.prototype.event = function (event) {\n        if (typeof event !== 'object' || !event.type) {\n            throw new Error('The event have to be a KeyboardEvent.');\n        }\n        if (event.type === 'keydown') {\n            var code = getCode(event.code ? event.code : event.which);\n            if (!code) {\n                return;\n            }\n            var mods = this.normalizeMods(event);\n            if (event.getModifierState) {\n                this.capslock = event.getModifierState('CapsLock');\n                mods.capslock = this.capslock;\n            }\n            var commandAction = this.getCommandAction(this.notPreventCommands, code, mods);\n            if (commandAction) {\n                return;\n            }\n            event.preventDefault();\n            return this.executeKey(code, mods);\n        }\n    };\n    GhostKeyboard.prototype.type = function (key, mods) {\n        var code = getCode(key);\n        return this.executeKey(code, mods);\n    };\n    return GhostKeyboard;\n}());\nexport default GhostKeyboard;\n","/**\n * Get the x, y coordinates of a caret position inside a input\n */\nfunction getCaretCoord(input, caretPos) {\n    var inputX = input.offsetLeft, inputY = input.offsetTop;\n    var div = document.createElement('div');\n    var inputStyle = getComputedStyle(input);\n    // @ts-ignore\n    for (var _i = 0, inputStyle_1 = inputStyle; _i < inputStyle_1.length; _i++) {\n        var prop = inputStyle_1[_i];\n        div.style[prop] = inputStyle[prop];\n    }\n    var swap = '.';\n    var inputValue = input.tagName === 'INPUT' ? input.value.replace(/ /g, swap) : input.value;\n    var textContent = inputValue.substr(0, caretPos);\n    div.textContent = textContent;\n    if (input.tagName === 'TEXTAREA') {\n        div.style.height = 'auto';\n    }\n    if (input.tagName === 'INPUT') {\n        div.style.width = 'auto';\n    }\n    var span = document.createElement('span');\n    span.textContent = inputValue.substr(caretPos) || '.';\n    div.appendChild(span);\n    document.body.appendChild(div);\n    var offsetLeft = span.offsetLeft, offsetTop = span.offsetTop;\n    document.body.removeChild(div);\n    return {\n        x: offsetLeft,\n        y: offsetTop,\n    };\n}\nfunction getBrowser() {\n    if (!navigator) {\n        return null;\n    }\n    if ((navigator.userAgent.indexOf(\"Opera\") || navigator.userAgent.indexOf('OPR')) != -1) {\n        return 'Opera';\n    }\n    else if (navigator.userAgent.indexOf(\"Chrome\") != -1) {\n        return 'Chrome';\n    }\n    else if (navigator.userAgent.indexOf(\"Safari\") != -1) {\n        return 'Safari';\n    }\n    else if (navigator.userAgent.indexOf(\"Firefox\") != -1) {\n        return 'Firefox';\n        // @ts-ignore\n    }\n    else if ((navigator.userAgent.indexOf(\"MSIE\") != -1) || (!!document.documentMode === true)) {\n        return 'IE';\n    }\n    return null;\n}\nfunction getClipboardText(e) {\n    var clipboardText = '';\n    if (e.clipboardData && e.clipboardData.getData) {\n        clipboardText = e.clipboardData.getData('text/plain');\n    }\n    // @ts-ignore // IE10 Verify\n    if (window.clipboardData && window.clipboardData.getData) {\n        // @ts-ignore // IE10 has this method\n        clipboardText = window.clipboardData.getData('Text');\n    }\n    return clipboardText;\n}\nvar utils = {\n    getCaretCoord: getCaretCoord,\n    getBrowser: getBrowser,\n    getClipboardText: getClipboardText\n};\nexport default utils;\n","import GKeyboard from './components/GhostKeyboard';\nfunction GhostKeyboard(config) {\n    return new GKeyboard(config);\n}\nexport { GhostKeyboard };\nexport default GhostKeyboard;\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport codes from './codes';\nimport MainKeyboard from './Main';\nvar KEYSET_LIST = [\n    { code: codes.Backquote.code, base: '`', mod: '~' },\n    { code: codes.Minus.code, base: '-', mod: '_' },\n    { code: codes.Equal.code, base: '=', mod: '+' },\n    { code: codes.BracketLeft.code, base: '[', mod: '{' },\n    { code: codes.BracketRight.code, base: ']', mod: '}' },\n    { code: codes.Backslash.code, base: '\\\\', mod: '|' },\n    { code: codes.Semicolon.code, base: ';', mod: ':' },\n    { code: codes.Quote.code, base: '\\'', mod: '\"' },\n    { code: codes.Comma.code, base: ',', mod: '<' },\n    { code: codes.Period.code, base: '.', mod: '>' },\n    { code: codes.Slash.code, base: '/', mod: '?' },\n    { code: codes.CapsLock.code },\n    { code: codes.Space.code },\n    { code: codes.ArrowLeft.code },\n    { code: codes.ArrowUp.code },\n    { code: codes.ArrowRight.code },\n    { code: codes.ArrowDown.code },\n    { code: codes.Backspace.code },\n    { code: codes.Delete.code },\n    { code: codes.Home.code },\n    { code: codes.End.code },\n    { code: codes.Digit1.code, base: '1', mod: '!' },\n    { code: codes.Digit2.code, base: '2', mod: '@' },\n    { code: codes.Digit3.code, base: '3', mod: '#' },\n    { code: codes.Digit4.code, base: '4', mod: '$' },\n    { code: codes.Digit5.code, base: '5', mod: '%' },\n    { code: codes.Digit6.code, base: '6', mod: '^' },\n    { code: codes.Digit7.code, base: '7', mod: '&' },\n    { code: codes.Digit8.code, base: '8', mod: '*' },\n    { code: codes.Digit9.code, base: '9', mod: '(' },\n    { code: codes.Digit0.code, base: '0', mod: ')' },\n    { code: codes.KeyA.code, base: 'a', mod: 'A' },\n    { code: codes.KeyB.code, base: 'b', mod: 'B' },\n    { code: codes.KeyC.code, base: 'c', mod: 'C' },\n    { code: codes.KeyD.code, base: 'd', mod: 'D' },\n    { code: codes.KeyE.code, base: 'e', mod: 'E' },\n    { code: codes.KeyF.code, base: 'f', mod: 'F' },\n    { code: codes.KeyG.code, base: 'g', mod: 'G' },\n    { code: codes.KeyH.code, base: 'h', mod: 'H' },\n    { code: codes.KeyI.code, base: 'i', mod: 'I' },\n    { code: codes.KeyJ.code, base: 'j', mod: 'J' },\n    { code: codes.KeyK.code, base: 'k', mod: 'K' },\n    { code: codes.KeyL.code, base: 'l', mod: 'L' },\n    { code: codes.KeyM.code, base: 'm', mod: 'M' },\n    { code: codes.KeyN.code, base: 'n', mod: 'N' },\n    { code: codes.KeyO.code, base: 'o', mod: 'O' },\n    { code: codes.KeyP.code, base: 'p', mod: 'P' },\n    { code: codes.KeyQ.code, base: 'q', mod: 'Q' },\n    { code: codes.KeyR.code, base: 'r', mod: 'R' },\n    { code: codes.KeyS.code, base: 's', mod: 'S' },\n    { code: codes.KeyT.code, base: 't', mod: 'T' },\n    { code: codes.KeyU.code, base: 'u', mod: 'U' },\n    { code: codes.KeyV.code, base: 'v', mod: 'V' },\n    { code: codes.KeyW.code, base: 'w', mod: 'W' },\n    { code: codes.KeyX.code, base: 'x', mod: 'X' },\n    { code: codes.KeyY.code, base: 'y', mod: 'Y' },\n    { code: codes.KeyZ.code, base: 'z', mod: 'Z' }\n];\nfunction arrangeCharsets() {\n    var charsListArranged = {};\n    KEYSET_LIST.forEach(function (char) {\n        charsListArranged[char.code] = char;\n    });\n    return charsListArranged;\n}\nvar ENGLISH_CHARSETS = arrangeCharsets();\nvar EnglishKeyboard = /** @class */ (function (_super) {\n    __extends(EnglishKeyboard, _super);\n    function EnglishKeyboard() {\n        var _this = _super.call(this) || this;\n        _this.lang = 'en';\n        _this.charsets = ENGLISH_CHARSETS;\n        return _this;\n    }\n    EnglishKeyboard.prototype.getCode = function (char) {\n        var code = null;\n        if (char === ' ') {\n            return {\n                code: codes.Space.code\n            };\n        }\n        KEYSET_LIST.every(function (keyset) {\n            if (keyset.base === char) {\n                code = {\n                    code: keyset.code\n                };\n                return false;\n            }\n            if (keyset.mod === char) {\n                code = {\n                    code: keyset.code,\n                    mods: {\n                        shiftKey: true\n                    }\n                };\n                return false;\n            }\n            return true;\n        });\n        return code;\n    };\n    EnglishKeyboard.prototype.getChar = function (code, mods) {\n        if (this.charsets[code]) {\n            var char = {\n                code: code,\n                char: this.charsets[code].base,\n                compose: this.charsets[code].compose\n            };\n            if (mods && mods.shiftKey) {\n                char.char = this.charsets[code].mod;\n            }\n            if (mods && mods.capslock && char.char.match(/[a-zA-Z]/g)) {\n                char.char = this.charsets[code].mod;\n            }\n            return char;\n        }\n        return null;\n    };\n    return EnglishKeyboard;\n}(MainKeyboard));\nexport default EnglishKeyboard;\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport codes from './codes';\nimport MainKeyboard from './Main';\nvar KEYSET_LIST = [\n    { code: codes.Backquote.code, base: '`', mod: '~' },\n    { code: codes.Minus.code, base: '-', mod: '_' },\n    { code: codes.Equal.code, base: '=', mod: '+' },\n    { code: codes.BracketLeft.code, base: '[', mod: '{' },\n    { code: codes.BracketRight.code, base: ']', mod: '}' },\n    { code: codes.Backslash.code, base: '\\\\', mod: '|' },\n    { code: codes.Semicolon.code, base: ';', mod: ':' },\n    { code: codes.Quote.code, base: '\\'', mod: '\"' },\n    { code: codes.Comma.code, base: ',', mod: '<' },\n    { code: codes.Period.code, base: '.', mod: '>' },\n    { code: codes.Slash.code, base: '/', mod: '?' },\n    { code: codes.CapsLock.code },\n    { code: codes.Space.code },\n    { code: codes.ArrowLeft.code },\n    { code: codes.ArrowUp.code },\n    { code: codes.ArrowRight.code },\n    { code: codes.ArrowDown.code },\n    { code: codes.Backspace.code },\n    { code: codes.Delete.code },\n    { code: codes.Home.code },\n    { code: codes.End.code },\n    { code: codes.Digit1.code, base: '1', mod: '!' },\n    { code: codes.Digit2.code, base: '2', mod: '@' },\n    { code: codes.Digit3.code, base: '3', mod: '#' },\n    { code: codes.Digit4.code, base: '4', mod: '$' },\n    { code: codes.Digit5.code, base: '5', mod: '%' },\n    { code: codes.Digit6.code, base: '6', mod: '^' },\n    { code: codes.Digit7.code, base: '7', mod: '&' },\n    { code: codes.Digit8.code, base: '8', mod: '*' },\n    { code: codes.Digit9.code, base: '9', mod: '(' },\n    { code: codes.Digit0.code, base: '0', mod: ')' },\n    { code: codes.KeyA.code, base: 'ㅁ', mod: null, compose: true },\n    { code: codes.KeyB.code, base: 'ㅠ', mod: null, compose: true },\n    { code: codes.KeyC.code, base: 'ㅊ', mod: null, compose: true },\n    { code: codes.KeyD.code, base: 'ㅇ', mod: null, compose: true },\n    { code: codes.KeyE.code, base: 'ㄷ', mod: 'ㄸ', compose: true },\n    { code: codes.KeyF.code, base: 'ㄹ', mod: null, compose: true },\n    { code: codes.KeyG.code, base: 'ㅎ', mod: null, compose: true },\n    { code: codes.KeyH.code, base: 'ㅗ', mod: null, compose: true },\n    { code: codes.KeyI.code, base: 'ㅑ', mod: null, compose: true },\n    { code: codes.KeyJ.code, base: 'ㅓ', mod: null, compose: true },\n    { code: codes.KeyK.code, base: 'ㅏ', mod: null, compose: true },\n    { code: codes.KeyL.code, base: 'ㅣ', mod: null, compose: true },\n    { code: codes.KeyM.code, base: 'ㅡ', mod: null, compose: true },\n    { code: codes.KeyN.code, base: 'ㅜ', mod: null, compose: true },\n    { code: codes.KeyO.code, base: 'ㅐ', mod: 'ㅒ', compose: true },\n    { code: codes.KeyP.code, base: 'ㅔ', mod: 'ㅖ', compose: true },\n    { code: codes.KeyQ.code, base: 'ㅂ', mod: 'ㅃ', compose: true },\n    { code: codes.KeyR.code, base: 'ㄱ', mod: 'ㄲ', compose: true },\n    { code: codes.KeyS.code, base: 'ㄴ', mod: null, compose: true },\n    { code: codes.KeyT.code, base: 'ㅅ', mod: 'ㅆ', compose: true },\n    { code: codes.KeyU.code, base: 'ㅕ', mod: null, compose: true },\n    { code: codes.KeyV.code, base: 'ㅍ', mod: null, compose: true },\n    { code: codes.KeyW.code, base: 'ㅈ', mod: 'ㅉ', compose: true },\n    { code: codes.KeyX.code, base: 'ㅌ', mod: null, compose: true },\n    { code: codes.KeyY.code, base: 'ㅛ', mod: null, compose: true },\n    { code: codes.KeyZ.code, base: 'ㅋ', mod: null, compose: true }\n];\nfunction arrangeCharsets() {\n    var charsListArranged = {};\n    KEYSET_LIST.forEach(function (char) {\n        charsListArranged[char.code] = char;\n    });\n    return charsListArranged;\n}\nvar KOREAN_CHARSETS = arrangeCharsets();\nvar KoreanKeyboard = /** @class */ (function (_super) {\n    __extends(KoreanKeyboard, _super);\n    function KoreanKeyboard() {\n        var _this = _super.call(this) || this;\n        _this.lang = 'ko';\n        _this.charsets = KOREAN_CHARSETS;\n        return _this;\n    }\n    KoreanKeyboard.prototype.getChar = function (code, mods) {\n        if (this.charsets[code]) {\n            var char = {\n                code: code,\n                char: this.charsets[code].base,\n                compose: this.charsets[code].compose\n            };\n            if (mods && mods.shiftKey && this.charsets[code].mod) {\n                char.char = this.charsets[code].mod;\n            }\n            return char;\n        }\n        return null;\n    };\n    return KoreanKeyboard;\n}(MainKeyboard));\nexport default KoreanKeyboard;\n","import codes from './codes';\nvar MainKeyboard = /** @class */ (function () {\n    function MainKeyboard() {\n        this.charsets = {};\n    }\n    MainKeyboard.prototype.getCode = function (char) {\n        var _this = this;\n        var code = null;\n        if (char === ' ') {\n            return {\n                code: codes.Space.code\n            };\n        }\n        Object.keys(this.charsets).every(function (charsetCode) {\n            var keyset = _this.charsets[charsetCode];\n            if (keyset.base === char) {\n                code = {\n                    code: keyset.code\n                };\n                return false;\n            }\n            if (keyset.mod === char) {\n                code = {\n                    code: keyset.code,\n                    mods: {\n                        shiftKey: true\n                    }\n                };\n                return false;\n            }\n            return true;\n        });\n        return code;\n    };\n    return MainKeyboard;\n}());\nexport default MainKeyboard;\n","var CODES_LIST = {\n    Backquote: { code: 'Backquote', keyCode: 192 },\n    Minus: { code: 'Minus', keyCode: 189 },\n    Equal: { code: 'Equal', keyCode: 187 },\n    BracketLeft: { code: 'BracketLeft', keyCode: 219 },\n    BracketRight: { code: 'BracketRight', keyCode: 221 },\n    Backslash: { code: 'Backslash', keyCode: 220 },\n    Semicolon: { code: 'Semicolon', keyCode: 186 },\n    Quote: { code: 'Quote', keyCode: 222 },\n    Comma: { code: 'Comma', keyCode: 188 },\n    Period: { code: 'Period', keyCode: 190 },\n    Slash: { code: 'Slash', keyCode: 191 },\n    AltLeft: { code: 'AltLeft', keyCode: 18 },\n    Home: { code: 'Home', keyCode: 36 },\n    End: { code: 'End', keyCode: 35 },\n    CapsLock: { code: 'CapsLock', keyCode: 20 },\n    ShiftLeft: { code: 'ShiftLeft', keyCode: 16 },\n    ShiftRight: { code: 'ShiftRight', keyCode: 16 },\n    Space: { code: 'Space', keyCode: 32 },\n    ArrowLeft: { code: 'ArrowLeft', keyCode: 37 },\n    ArrowUp: { code: 'ArrowUp', keyCode: 38 },\n    ArrowRight: { code: 'ArrowRight', keyCode: 39 },\n    ArrowDown: { code: 'ArrowDown', keyCode: 40 },\n    Backspace: { code: 'Backspace', keyCode: 8 },\n    Delete: { code: 'Delete', keyCode: 46 },\n    Tab: { code: 'Tab', keyCode: 9 },\n    Digit1: { code: 'Digit1', keyCode: 49 },\n    Digit2: { code: 'Digit2', keyCode: 50 },\n    Digit3: { code: 'Digit3', keyCode: 51 },\n    Digit4: { code: 'Digit4', keyCode: 52 },\n    Digit5: { code: 'Digit5', keyCode: 53 },\n    Digit6: { code: 'Digit6', keyCode: 54 },\n    Digit7: { code: 'Digit7', keyCode: 55 },\n    Digit8: { code: 'Digit8', keyCode: 56 },\n    Digit9: { code: 'Digit9', keyCode: 57 },\n    Digit0: { code: 'Digit0', keyCode: 48 },\n    KeyA: { code: 'KeyA', keyCode: 65 },\n    KeyB: { code: 'KeyB', keyCode: 66 },\n    KeyC: { code: 'KeyC', keyCode: 67 },\n    KeyD: { code: 'KeyD', keyCode: 68 },\n    KeyE: { code: 'KeyE', keyCode: 69 },\n    KeyF: { code: 'KeyF', keyCode: 70 },\n    KeyG: { code: 'KeyG', keyCode: 71 },\n    KeyH: { code: 'KeyH', keyCode: 72 },\n    KeyI: { code: 'KeyI', keyCode: 73 },\n    KeyJ: { code: 'KeyJ', keyCode: 74 },\n    KeyK: { code: 'KeyK', keyCode: 75 },\n    KeyL: { code: 'KeyL', keyCode: 76 },\n    KeyM: { code: 'KeyM', keyCode: 77 },\n    KeyN: { code: 'KeyN', keyCode: 78 },\n    KeyO: { code: 'KeyO', keyCode: 79 },\n    KeyP: { code: 'KeyP', keyCode: 80 },\n    KeyQ: { code: 'KeyQ', keyCode: 81 },\n    KeyR: { code: 'KeyR', keyCode: 82 },\n    KeyS: { code: 'KeyS', keyCode: 83 },\n    KeyT: { code: 'KeyT', keyCode: 84 },\n    KeyU: { code: 'KeyU', keyCode: 85 },\n    KeyV: { code: 'KeyV', keyCode: 86 },\n    KeyW: { code: 'KeyW', keyCode: 87 },\n    KeyX: { code: 'KeyX', keyCode: 88 },\n    KeyY: { code: 'KeyY', keyCode: 89 },\n    KeyZ: { code: 'KeyZ', keyCode: 90 }\n};\nexport function getByKeyCode(keyCode) {\n    for (var code in CODES_LIST) {\n        if (CODES_LIST[code].keyCode === keyCode) {\n            return CODES_LIST[code].code;\n        }\n    }\n    return null;\n}\n;\nexport function get(key) {\n    if (typeof key === 'number') {\n        return getByKeyCode(key);\n    }\n    if (typeof key === 'string') {\n        if (CODES_LIST[key]) {\n            return CODES_LIST[key].code;\n        }\n    }\n    return null;\n}\n;\nexport default CODES_LIST;\n","import EnglishKeyboard from './English';\nimport KoreanKeyboard from './Korean';\nvar KEYBOARDS = {\n    en: EnglishKeyboard,\n    ko: KoreanKeyboard\n};\nexport default KEYBOARDS;\n"],"sourceRoot":""}